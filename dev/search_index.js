var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = Dilutions","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [Dilutions]","category":"page"},{"location":"api/#Dilutions.normalize-Tuple{Any, Any, Any}","page":"API","title":"Dilutions.normalize","text":"normalize(source_concentration, target_concentration, target_volume)\nnormalize(df::DataFrame)\nsource_concentration: concentration of stock\ntarget_concentration: needed concentration\ntarget_volume: needed volume\n\nThe values can be either numeric or with units from Unitful.\nIf units are used, the result will be in the unit of `target_volume`.\nValues can also be given as keyword arguments.\nFor a DataFrame, it must have columns matching `r\"[source|stock]_con\", r\"target_con\", r\"target_vol\"`\n\nResult: (;source_volume, solvent_volume)n\n\nExamples:\n``` julia\nnormalize(5000,200,1000) == (source_volume = 40.0, solvent_volume = 960.0)\nnormalize(5000u\"µmol/L\",200u\"µmol/L\", 1000u\"µL\") == (source_volume = 40.0u\"μL\", solvent_volume = 960.0u\"μL\")\nnormalize(5u\"mmol/L\",200u\"µmol/L\", 1u\"mL\") == (source_volume = 0.04u\"mL\", solvent_volume = 0.96u\"mL\")\n```\n\n\n\n\n\n","category":"method"},{"location":"api/#Dilutions.standards-Tuple{Any, Any, Any}","page":"API","title":"Dilutions.standards","text":"standards(source_concentration, target_concentrations, target_volume)\n\nsource_concentration: concetration of stock\ntarget_concentrations: vector of target concentrations\ntarget_volume: desired volume of each standard\n\nresult:\nDataFrame with columns: source_concentration  target_concentration  target_volume  source_volume  solvent_volume\nwhere the last 2 are instructions in how to make the standard solutions.\n\nCurrently this is very simple using only the given stock concentration.\nA more realistic version will allows for using intermediate dilutions for the lower concentrations.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Dilutions","category":"page"},{"location":"#Dilutions","page":"Home","title":"Dilutions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Dilutions.","category":"page"},{"location":"#Purpose","page":"Home","title":"Purpose","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is for working with chemical dilutions in Julia.","category":"page"},{"location":"#Use-cases","page":"Home","title":"Use cases","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Diluting a stock solution to a given concentration.\nMaking a standard series.","category":"page"},{"location":"#Limitations","page":"Home","title":"Limitations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Currently it assumes volumes are additive.","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"CurrentModule = Dilutions","category":"page"},{"location":"normalize/#Normalize-Concentrations","page":"Normalisations","title":"Normalize Concentrations","text":"","category":"section"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"Often we have some stock at a given concentration, and need to obtain a sample of a lower concentration.","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"In a spreadsheet, we would have a table like this:","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"Reagent Stock conc unit Conc need unit Volume need unit Stock volume unit Solvent volume unit\nCuCl2 5000 µM 200 µM 1000 µl 40 µl 960 µl\nThiamine 10000 µM 600 µM 1000 µL 60 µL 940 µL","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"where we edit \"Stock conc\", \"Conc need\" and \"Volume need\", and then formulas will compute the stock volume and solvent volume to add (assuming additive volumes). One issue with this is that we need to make sure we use the same units for the concentrations.","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"With this package, we can do the same in this way:","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"using Dilutions\nusing DataFrmaes\nusing Unitful\njulia> df = DataFrame(Reagent = [\"CuCl2\", \"Thiamine\"], stock_conc = [5,10]u\"mM\", target_conc = [200,600]u\"µM\", target_vol = [1000, 1000]u\"µL\")\n2×4 DataFrame\n Row │ Reagent   stock_conc  target_conc  target_vol \n     │ String    Quantity…   Quantity…    Quantity…  \n─────┼───────────────────────────────────────────────\n   1 │ CuCl2           5 mM       200 μM     1000 μL\n   2 │ Thiamine       10 mM       600 μM     1000 μL\n\njulia> normalize(df)\n2×6 DataFrame\n Row │ Reagent   stock_conc  target_conc  target_vol  source_volume  solvent_volume \n     │ String    Quantity…   Quantity…    Quantity…   Quantity…      Quantity…      \n─────┼──────────────────────────────────────────────────────────────────────────────\n   1 │ CuCl2           5 mM       200 μM     1000 μL        40.0 μL        960.0 μL\n   2 │ Thiamine       10 mM       600 μM     1000 μL        60.0 μL        940.0 μL","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"There is a bit of flexibility in the column names: \"stock\" can also be \"source\", \"volume\" can be spelled out in full, and upper/lowercase is ignored.","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"The normalize function is also defined on positional and key-word arguments:","category":"page"},{"location":"normalize/","page":"Normalisations","title":"Normalisations","text":"normalize","category":"page"},{"location":"normalize/#Dilutions.normalize","page":"Normalisations","title":"Dilutions.normalize","text":"normalize(source_concentration, target_concentration, target_volume)\nnormalize(df::DataFrame)\nsource_concentration: concentration of stock\ntarget_concentration: needed concentration\ntarget_volume: needed volume\n\nThe values can be either numeric or with units from Unitful.\nIf units are used, the result will be in the unit of `target_volume`.\nValues can also be given as keyword arguments.\nFor a DataFrame, it must have columns matching `r\"[source|stock]_con\", r\"target_con\", r\"target_vol\"`\n\nResult: (;source_volume, solvent_volume)n\n\nExamples:\n``` julia\nnormalize(5000,200,1000) == (source_volume = 40.0, solvent_volume = 960.0)\nnormalize(5000u\"µmol/L\",200u\"µmol/L\", 1000u\"µL\") == (source_volume = 40.0u\"μL\", solvent_volume = 960.0u\"μL\")\nnormalize(5u\"mmol/L\",200u\"µmol/L\", 1u\"mL\") == (source_volume = 0.04u\"mL\", solvent_volume = 0.96u\"mL\")\n```\n\n\n\n\n\n","category":"function"},{"location":"standards/#Standards","page":"Standards","title":"Standards","text":"","category":"section"},{"location":"standards/","page":"Standards","title":"Standards","text":"The standards function makes a set of target concentrations often used as a standard row.","category":"page"},{"location":"standards/","page":"Standards","title":"Standards","text":"using Dilutions\n\njulia> standards(1000,[100,50,20], 100)\n3×5 DataFrame\n Row │ source_concentration  target_concentration  target_volume  source_volume  solvent_volume \n     │ Int64                 Int64                 Int64          Float64        Float64        \n─────┼──────────────────────────────────────────────────────────────────────────────────────────\n   1 │                 1000                   100            100           10.0            90.0\n   2 │                 1000                    50            100            5.0            95.0\n   3 │                 1000                    20            100            2.0            98.0","category":"page"}]
}
